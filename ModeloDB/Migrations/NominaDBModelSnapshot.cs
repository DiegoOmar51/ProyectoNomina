// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModeloDB;

namespace ModeloDB.Migrations
{
    [DbContext(typeof(NominaDB))]
    partial class NominaDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Modelo.Entidades.Decimo_Cuarto", b =>
                {
                    b.Property<int>("Decimo_CuartoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonalId")
                        .HasColumnType("int");

                    b.Property<string>("meses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.HasKey("Decimo_CuartoId");

                    b.HasIndex("PersonalId");

                    b.ToTable("Decimo_Cuartos");
                });

            modelBuilder.Entity("Modelo.Entidades.Decimo_Tercero", b =>
                {
                    b.Property<int>("Decimo_TerceroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ffinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("finicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("meses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.HasKey("Decimo_TerceroId");

                    b.HasIndex("PersonalId");

                    b.ToTable("Decimo_Terceros");
                });

            modelBuilder.Entity("Modelo.Entidades.Departamento", b =>
                {
                    b.Property<int>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PersonalId")
                        .HasColumnType("int");

                    b.Property<string>("departamento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartamentoId");

                    b.HasIndex("PersonalId")
                        .IsUnique()
                        .HasFilter("[PersonalId] IS NOT NULL");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("Modelo.Entidades.Fondo_reserva", b =>
                {
                    b.Property<int>("Fondo_reservaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonalId")
                        .HasColumnType("int");

                    b.Property<int>("porcentaje")
                        .HasColumnType("int");

                    b.Property<double>("valor")
                        .HasColumnType("float");

                    b.HasKey("Fondo_reservaId");

                    b.HasIndex("PersonalId");

                    b.ToTable("Fondo_reservas");
                });

            modelBuilder.Entity("Modelo.Entidades.Personal", b =>
                {
                    b.Property<int>("PersonalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("estado_civil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("no_documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("sueldo")
                        .HasColumnType("float");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonalId");

                    b.ToTable("Personales");
                });

            modelBuilder.Entity("Modelo.Entidades.Roles", b =>
                {
                    b.Property<int>("RolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Arecibir")
                        .HasColumnType("float");

                    b.Property<int>("PersonalId")
                        .HasColumnType("int");

                    b.HasKey("RolesId");

                    b.HasIndex("PersonalId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Modelo.Entidades.Vacaciones", b =>
                {
                    b.Property<int>("VacacionesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonalId")
                        .HasColumnType("int");

                    b.Property<double>("comisiones")
                        .HasColumnType("float");

                    b.Property<string>("meses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("sueldo")
                        .HasColumnType("float");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.HasKey("VacacionesID");

                    b.HasIndex("PersonalId");

                    b.ToTable("Vacaciones");
                });

            modelBuilder.Entity("Modelo.Entidades.Decimo_Cuarto", b =>
                {
                    b.HasOne("Modelo.Entidades.Personal", "Personal")
                        .WithMany("Decimos_Cuartos")
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("Modelo.Entidades.Decimo_Tercero", b =>
                {
                    b.HasOne("Modelo.Entidades.Personal", "Personal")
                        .WithMany("Decimos_Terceros")
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("Modelo.Entidades.Departamento", b =>
                {
                    b.HasOne("Modelo.Entidades.Personal", "Personal")
                        .WithOne("Departamento")
                        .HasForeignKey("Modelo.Entidades.Departamento", "PersonalId");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("Modelo.Entidades.Fondo_reserva", b =>
                {
                    b.HasOne("Modelo.Entidades.Personal", "Personal")
                        .WithMany("Fondo_reserva")
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("Modelo.Entidades.Roles", b =>
                {
                    b.HasOne("Modelo.Entidades.Personal", "Personal")
                        .WithMany("Roles")
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("Modelo.Entidades.Vacaciones", b =>
                {
                    b.HasOne("Modelo.Entidades.Personal", "Personal")
                        .WithMany("Vacaciones")
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("Modelo.Entidades.Personal", b =>
                {
                    b.Navigation("Decimos_Cuartos");

                    b.Navigation("Decimos_Terceros");

                    b.Navigation("Departamento");

                    b.Navigation("Fondo_reserva");

                    b.Navigation("Roles");

                    b.Navigation("Vacaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
